import java.io.IOException;
import java.util.Iterator;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapred.OutputCollector;
import org.apache.hadoop.mapred.MapReduceBase;
import org.apache.hadoop.mapred.Reducer;
import org.apache.hadoop.mapred.Reporter;

public class MyReducer extends MapReduceBase implements
    Reducer<Text, IntWritable, Text, IntWritable> {

	private Text name=new Text();
	private int max_bill=0;
	private OutputCollector<Text, IntWritable> output;
  @Override
  public void reduce(Text key, Iterator<IntWritable> values,
      OutputCollector<Text, IntWritable> output, Reporter reporter)
      throws IOException {
	  
	  this.output=output;
	  int final_bill = 0;
	  while (values.hasNext()) { 
	  final_bill += values.next().get(); 
	  } 
	  if(final_bill> max_bill)
	  {
		  max_bill = final_bill;
		  name.set(key);
	  }
	  
  }
	 @Override
		public void close() throws IO Exception
		{
		  output.collect(name,new IntWritable(max_bill));
		}
		
  
  }

